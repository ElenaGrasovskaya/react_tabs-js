{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","verifiedSelectedTabId","some","tab","id","className","map","index","href","onClick","title","find","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"6MAAaA,EAAO,SAAC,GAA4C,IAAD,EAAzCC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAEpCC,EADqBH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KACJA,EAAgBD,EAAK,GAAGM,GAE3E,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,EAAKI,GAAN,OACR,oBACE,UAAQ,MAERF,UAAWF,EAAIC,KAAOH,EAAwB,YAAc,GAH9D,SAKE,mBACEO,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,WACHN,EAAIC,KAAOH,GACbD,EAAcG,IALpB,SASGA,EAAIO,SAZFP,EAAIC,WAkBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,mBACGP,EAAKa,MAAK,SAAAR,GAAG,OAAIA,EAAIC,KAAOL,YAD/B,aACG,EAA4Ca,cCvBxCd,EAAO,CAClB,CAAEM,GAAI,QAASM,MAAO,QAASE,QAAS,eACxC,CAAER,GAAI,QAASM,MAAO,QAASE,QAAS,eACxC,CAAER,GAAI,QAASM,MAAO,QAASE,QAAS,gBAG7BC,EAAM,WAAO,IAAD,EACvB,EAA0CC,mBAAShB,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBgB,EAAtB,KAMA,OACE,sBAAKV,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,6CACsBP,EAAKa,MAAK,SAAAR,GAAG,OAAIA,EAAIC,KAAOL,YADlD,aACsB,EAA4CW,SAElE,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAAeA,EACfC,cAZgB,SAACG,GACrBY,EAAiBZ,EAAIC,WCdzBY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d4efb948.chunk.js","sourcesContent":["export const Tabs = ({ tabs, selectedTabId, onTabSelected }) => {\n  const isActiveTabPresent = tabs.some(tab => tab.id === selectedTabId);\n  const verifiedSelectedTabId = isActiveTabPresent ? selectedTabId : tabs[0].id;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab, index) => (\n            <li\n              data-cy=\"Tab\"\n              key={tab.id}\n              className={tab.id === verifiedSelectedTabId ? 'is-active' : ''}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (tab.id !== verifiedSelectedTabId) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(tab => tab.id === selectedTabId)?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const onTabSelected = (tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${tabs.find(tab => tab.id === selectedTabId)?.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}